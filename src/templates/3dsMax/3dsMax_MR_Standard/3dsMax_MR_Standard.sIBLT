[Template]
Name = @Name | Standard | String | Template Name
HelpFile = @HelpFile | help/3dsMax_MR_Standard Template Manual.htm | String | Help File
Release = @Release | 1.0.0 | String | Template Release
Date = @Date | 4 May 2010 | String | Date
Author = @Author | Dschaga / Jeff Hanna / Thomas Mansencal | String | Author
Email = @Email | christian@cgtechniques.com | String | Email
Url = @Url | http://my.opera.com/KelSolaar/blog/ | String | Url
Software = @Software | 3dsMax  | String | Software
Version = @Version | 2008+ | String | Version
Renderer = @Renderer | Mental Ray | String | Renderer
OutputScript = @OutputScript | sIBL_3dsmax_Import.ms | String | Output Script
Comment = @Comment | This is 3dsmax 2K Mental Ray Template. | String | Comment

[sIBL File Attributes]
Sun|SUNu = @SUNu
Sun|SUNv = @SUNv
Sun|SUNcolor = @SUNcolor
Sun|SUNmulti = @SUNmulti
Background|BGfile = @BGfile
Enviroment|EVfile = @EVfile
Reflection|REFfile = @REFfile

[Common Attributes]
createBackground = @createBackground | 1 | Boolean | Create Background
createLighting = @createLighting | 1 | Boolean | Create Lighting
createReflection = @createReflection | 1 | Boolean | Create Reflection
createSun = @createSun | 1 | Boolean | Create Sun
createLights = @createLights | 1 | Boolean | Create Dynamic Lights

[Additional Attributes]
north = @north | 0 | Float | North
sunDistance = @sunDistance | 100 | Float | Sun Distance

[Remote Connection]
ConnectionType = @ConnectionType | Win32 | String
TargetApplication = @TargetApplication | MAX.Application | String
ExecutionCommand = @ExecutionCommand | fileIn ("$loaderScriptPath") | String

[Script]
/*
@OutputScript - @Release For @Software @Version
Author : @Author
EMail : @Email
Homepage : @Url
Template Last Modified : @Date
sIBL_GUI
*/

struct sIBL_datas ( backgroundFilePath, lightingFilePath, reflectionFilePath, sunU, sunV, sunColor, sunMultiplier )
struct sIBL_options ( createBackground, createLighting, createReflection, createSun )
	
global IBL_SET_DATAS =  sIBL_datas backgroundFilePath:"@BGfile" lightingFilePath:"@EVfile" reflectionFilePath:"@REFfile" sunU:@SUNu sunV:@SUNv sunColor:"@SUNcolor" sunMultiplier:@SUNmulti
global LOADER_OPTIONS = sIBL_options createBackground:@createBackground createLighting:@createLighting createReflection:@createReflection createSun:@createSun

fn sIBL_3dsmax_MR_createSkyLight =
(
	iblSkylight = Skylight()
	iblSkylight.sky_mode = 0
	iblSkylight.name = "sIBL_SkyLight"
)

fn sIBL_3dsmax_MR_activateMentalRay =
(
	renderers.current = mental_ray_renderer()
)

fn sIBL_3dsmax_MR_getEnvironmentBranch branchName filePath =
(
	texture = Bitmaptexture()
	texture.filename = filePath
	texture.coordinates.mappingtype = 1
	
	texture.name = branchName + "_BitmapTexture"
	
	return texture
)

fn sIBL_3dsmax_MR_setEnvironment createBackground createLighting createReflection backgroundFilePath lightingFilePath reflectionFilePath =
(
	local rayswitchShader = mr_Raytype_Switcher__advanced()
	environmentMap = rayswitchShader
	
	if( createBackground == 1 ) then
	(
		local backgroundBranch = sIBL_3dsmax_MR_getEnvironmentBranch "sIBL_Background" backgroundFilePath
		rayswitchShader.eye = backgroundBranch
	)
	
	if( createLighting == 1 ) then
	(
		local lightingBranch = sIBL_3dsmax_MR_getEnvironmentBranch "sIBL_Lighting" lightingFilePath
		rayswitchShader.finalgather = lightingBranch
	)
	
	if( createReflection == 1 ) then
	(
		local reflectionBranch = sIBL_3dsmax_MR_getEnvironmentBranch "sIBL_Reflection" reflectionFilePath
		rayswitchShader.environment = reflectionBranch
		rayswitchShader.reflection = reflectionBranch
		rayswitchShader.refraction = reflectionBranch
	)
	
	rayswitchShader.name = "sIBL_RaySwitch"
)

fn sIBL_3dsmax_MR_activateLinearWorkflow =
(
	local gammaGainShader = Utility_Gamma___Gain__mi()
	renderers.current.Camera_Lens_Shader = gammaGainShader
	gammaGainShader.reverse = False
	gammaGainShader.name = "sIBL_GammaGain"
)

fn sIBL_3dsmax_MR_setup  =
(
	if( mr_Raytype_Switcher__advanced != undefined )then
	(
		sIBL_3dsmax_MR_activateMentalRay()
		sIBL_3dsmax_MR_createSkyLight()
		sIBL_3dsmax_MR_setEnvironment LOADER_OPTIONS.createBackground LOADER_OPTIONS.createLighting LOADER_OPTIONS.createReflection IBL_SET_DATAS.backgroundFilePath IBL_SET_DATAS.lightingFilePath IBL_SET_DATAS.reflectionFilePath
		sIBL_3dsmax_MR_activateLinearWorkflow()
	)
	else
	(
		messageBox "sIBL_GUI | Mental Ray Productions Shaders Are Not Available !" title:"sIBL_GUI Error"
	)
)

sIBL_3dsmax_MR_setup()